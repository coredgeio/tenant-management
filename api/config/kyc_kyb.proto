syntax = "proto3";

package config;
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/coredgeio/tenant-management/api/config";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0"
    title: "TenantManagement API "
  }
  external_docs: {
    description: "TenantManagement API, KYC_KYB"
  }
};

service TenantManagement {
  
  rpc GetTenantUserLevelKycStatus(TenantUserLevelKycGetReq) returns (TenantUserLevelKycResp) {
    option (google.api.http) = {
        get: "/v1/api/tenant-mgmt/tenant/{name}/kyc"
    };
  }
 
  rpc GetTenantLevelKCStatus(TenantLevelKCGetReq) returns (TenantLevelKCResp) {
    option (google.api.http) = {
        get: "/v1/api/tenant-mgmt/v1/tenant/{name}/kyb"
    };
  }
}

message TenantUserLevelKycGetReq {
    //org name for kyc req
   string name = 1;
}

message TenantLevelKCGetReq {
    //org name for kyb req
   string name = 1;
}


enum StatusInfo{

    //Process is pending
     Pending = 0;

    // in-process
     InProcess = 1;

    //Process has failed
     Failed = 2;

    //Process is Partially complete
     Partial = 3;

    //Process is done
     Done = 4;

    // ReVerification is needed
     ReVerificationNeeded = 5;
}


message TenantUserLevelKycResp {
    // TenantUserLevelKyc Status for tenant
    StatusInfo TenantUserLevelKycStatus = 1;
}

message TenantLevelKCResp {
    // TenantLevelKC Status for tenant
   StatusInfo TenantLevelKCStatus = 1;   
}

