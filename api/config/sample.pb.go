// Copyright 2025, Coredge.io Inc.
// All Rights reserved.
//
// Author Akash Sharma (akash.sharma@coredge.io)

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: sample.proto

package config

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HelloWorldReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// project, url argument for mandatory parameters usually forming key fields
	// for API
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// query parameter following type match requirements
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// string query parameter
	Text          string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloWorldReq) Reset() {
	*x = HelloWorldReq{}
	mi := &file_sample_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloWorldReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloWorldReq) ProtoMessage() {}

func (x *HelloWorldReq) ProtoReflect() protoreflect.Message {
	mi := &file_sample_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloWorldReq.ProtoReflect.Descriptor instead.
func (*HelloWorldReq) Descriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{0}
}

func (x *HelloWorldReq) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *HelloWorldReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *HelloWorldReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type HelloWorldResp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// project in respose message
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// returing the query offset
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// returning the string query parameter
	Text          string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HelloWorldResp) Reset() {
	*x = HelloWorldResp{}
	mi := &file_sample_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HelloWorldResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelloWorldResp) ProtoMessage() {}

func (x *HelloWorldResp) ProtoReflect() protoreflect.Message {
	mi := &file_sample_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelloWorldResp.ProtoReflect.Descriptor instead.
func (*HelloWorldResp) Descriptor() ([]byte, []int) {
	return file_sample_proto_rawDescGZIP(), []int{1}
}

func (x *HelloWorldResp) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *HelloWorldResp) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *HelloWorldResp) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

var File_sample_proto protoreflect.FileDescriptor

const file_sample_proto_rawDesc = "" +
	"\n" +
	"\fsample.proto\x12\x06config\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"U\n" +
	"\rHelloWorldReq\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\"V\n" +
	"\x0eHelloWorldResp\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text2g\n" +
	"\tSampleApi\x12Z\n" +
	"\n" +
	"HelloWorld\x12\x15.config.HelloWorldReq\x1a\x16.config.HelloWorldResp\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/project/{project}B\x7f\x92AK\x12\"\n" +
	"\x1bAI/ML orchestrator API spec2\x031.0r%\n" +
	"#AI/ML orchestrator API spec, sampleZ/github.com/coredgeio/ai-orchestrator/api/configb\x06proto3"

var (
	file_sample_proto_rawDescOnce sync.Once
	file_sample_proto_rawDescData []byte
)

func file_sample_proto_rawDescGZIP() []byte {
	file_sample_proto_rawDescOnce.Do(func() {
		file_sample_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sample_proto_rawDesc), len(file_sample_proto_rawDesc)))
	})
	return file_sample_proto_rawDescData
}

var file_sample_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_sample_proto_goTypes = []any{
	(*HelloWorldReq)(nil),  // 0: config.HelloWorldReq
	(*HelloWorldResp)(nil), // 1: config.HelloWorldResp
}
var file_sample_proto_depIdxs = []int32{
	0, // 0: config.SampleApi.HelloWorld:input_type -> config.HelloWorldReq
	1, // 1: config.SampleApi.HelloWorld:output_type -> config.HelloWorldResp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_sample_proto_init() }
func file_sample_proto_init() {
	if File_sample_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sample_proto_rawDesc), len(file_sample_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sample_proto_goTypes,
		DependencyIndexes: file_sample_proto_depIdxs,
		MessageInfos:      file_sample_proto_msgTypes,
	}.Build()
	File_sample_proto = out.File
	file_sample_proto_goTypes = nil
	file_sample_proto_depIdxs = nil
}
